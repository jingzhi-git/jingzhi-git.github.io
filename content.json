{"meta":{"title":"今天你学习了吗","subtitle":"","description":"","author":"好歹早点睡","url":"http://example.com","root":"/"},"pages":[{"title":"404","date":"2023-03-13T08:38:45.000Z","updated":"2023-03-13T08:41:46.855Z","comments":true,"path":"404/index.html","permalink":"http://example.com/404/","excerpt":"","text":"layout: 404title: “[404]” description :”May the Force be with you :&amp;#41;”"},{"title":"照片","date":"2023-03-14T15:38:37.000Z","updated":"2023-03-14T15:39:43.551Z","comments":true,"path":"Gallery/index.html","permalink":"http://example.com/Gallery/","excerpt":"","text":""},{"title":"link","date":"2023-03-14T15:24:37.000Z","updated":"2023-03-14T15:39:49.583Z","comments":true,"path":"link/index.html","permalink":"http://example.com/link/","excerpt":"","text":""},{"title":"分类","date":"2022-08-09T13:18:44.000Z","updated":"2023-03-19T10:06:48.189Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/","excerpt":"","text":""},{"title":"about","date":"2023-03-13T11:56:51.000Z","updated":"2023-03-13T11:56:51.815Z","comments":true,"path":"about/index-1.html","permalink":"http://example.com/about/index-1.html","excerpt":"","text":""},{"title":"","date":"2023-03-19T09:32:46.074Z","updated":"2023-03-19T09:32:46.074Z","comments":true,"path":"js/runtime.js","permalink":"http://example.com/js/runtime.js","excerpt":"","text":"var now=new Date;function createtime(){now.setTime(now.getTime()+1e3);var e=new Date(\"03/13/2023 22:22:22\"),t=Math.trunc(234e8+(now-e)/1e3*17),a=(t/1496e5).toFixed(6),o=new Date(\"03/13/2023 22:22:22\"),n=(now-o)/1e3/60/60/24,r=Math.floor(n),i=(now-o)/1e3/60/60-24*r,s=Math.floor(i);1==String(s).length&&(s=\"0\"+s);var d=(now-o)/1e3/60-1440*r-60*s,l=Math.floor(d);1==String(l).length&&(l=\"0\"+l);var g=(now-o)/1e3-86400*r-3600*s-60*l,b=Math.round(g);1==String(b).length&&(b=\"0\"+b);let c=\"\";c=s=9?` 本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀`:` 本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀`,document.getElementById(\"workboard\")&&(document.getElementById(\"workboard\").innerHTML=c)}setInterval((()=>{createtime()}),1e3);"},{"title":"","date":"2023-03-19T08:57:18.037Z","updated":"2023-03-19T08:57:18.037Z","comments":true,"path":"css/custom.css","permalink":"http://example.com/css/custom.css","excerpt":"","text":"/* 页脚与头图透明 */ #footer { background: transparent !important; } #page-header { background: transparent !important; } /* 白天模式遮罩透明 */ #footer::before { background: transparent !important; } #page-header::before { background: transparent !important; } /* 夜间模式遮罩透明 */ [data-theme=\"dark\"] #footer::before { background: transparent !important; } [data-theme=\"dark\"] #page-header::before { background: transparent !important; }"},{"title":"about","date":"2023-03-13T11:54:18.000Z","updated":"2023-03-13T08:26:07.809Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/","excerpt":"","text":"2023.3.13创建博客，主要用于记录分享一些所学的内容，大家相互学习进步"},{"title":"tags","date":"2023-03-14T15:21:50.000Z","updated":"2023-03-14T15:22:55.111Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/","excerpt":"","text":""},{"title":"音乐","date":"2023-03-14T15:36:37.000Z","updated":"2023-03-14T15:37:28.481Z","comments":true,"path":"music/index.html","permalink":"http://example.com/music/","excerpt":"","text":""}],"posts":[{"title":"vscode学习","slug":"vscode学习","date":"2023-03-19T03:24:52.000Z","updated":"2023-03-19T04:08:07.049Z","comments":true,"path":"2023/03/19/vscode学习/","link":"","permalink":"http://example.com/2023/03/19/vscode%E5%AD%A6%E4%B9%A0/","excerpt":"创建工程参考文献： https://www.cnblogs.com/englyf/p/16685082.html 这里我的vscode是英文，windows系统中我没改 这里很有意思，vscode是自己创建个文件夹然后打开这个文件夹 自己创建个cpp文件就行了，左边栏里面有文件+号的标志","text":"创建工程参考文献： https://www.cnblogs.com/englyf/p/16685082.html 这里我的vscode是英文，windows系统中我没改 这里很有意思，vscode是自己创建个文件夹然后打开这个文件夹 自己创建个cpp文件就行了，左边栏里面有文件+号的标志","categories":[],"tags":[]},{"title":"语雀学习","slug":"语雀使用","date":"2023-03-19T03:09:00.000Z","updated":"2023-03-19T04:08:35.765Z","comments":true,"path":"2023/03/19/语雀使用/","link":"","permalink":"http://example.com/2023/03/19/%E8%AF%AD%E9%9B%80%E4%BD%BF%E7%94%A8/","excerpt":"平时一直用语雀进行文章编写，感觉很好，这里记录一下语雀中发现的好的内容 文档编辑https://www.yuque.com/yuque/gpvawt 公式的插入https://www.yuque.com/yuque/gpvawt/brzicb log：这里的话顺便说一下语雀中只要是按住ctrl打出&#x2F;，注意这里不分中英文情况下，就可以引出你要添加的内容，里面会出现公式，当然懒得找直接&#x2F;gs，gs很简单就是公式的首拼音 log的话是_取下标，这样就OK了 但这里有个问题。。。。log以23为底咋办，纯寄，不会，等再说吧，暂时没有需要","text":"平时一直用语雀进行文章编写，感觉很好，这里记录一下语雀中发现的好的内容 文档编辑https://www.yuque.com/yuque/gpvawt 公式的插入https://www.yuque.com/yuque/gpvawt/brzicb log：这里的话顺便说一下语雀中只要是按住ctrl打出&#x2F;，注意这里不分中英文情况下，就可以引出你要添加的内容，里面会出现公式，当然懒得找直接&#x2F;gs，gs很简单就是公式的首拼音 log的话是_取下标，这样就OK了 但这里有个问题。。。。log以23为底咋办，纯寄，不会，等再说吧，暂时没有需要","categories":[],"tags":[]},{"title":"算法学习","slug":"算法学习","date":"2023-03-19T02:41:25.000Z","updated":"2023-03-19T01:28:57.916Z","comments":true,"path":"2023/03/19/算法学习/","link":"","permalink":"http://example.com/2023/03/19/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/","excerpt":"参考文献： https://zhuanlan.zhihu.com/p/45986027 分治算法分治算法的概念分治分治，即分而治之。分治，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，再把子问题分成更小的子问题……直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。这个技巧是很多高效算法的基础，如排序算法(快速排序，归并排序)，傅立叶变换(快速傅立叶变换)……直接说就是将一个难以直接解决的大问题，分割成一些规模比较小的相同的小问题，以便各个击破，分而治之。 分治算法（Divide and Conquer，D&amp;C）是一种常用的算法思想，它通过将问题划分成若干个规模较小的子问题，递归求解子问题，然后将子问题的解合并得到原问题的解。它通常用于求解一些复杂的问题，例如归并排序、快速排序、求解最大子序列等问题。 分治算法的核心思想是将原问题划分成若干个规模相同的子问题，通过递归求解子问题，然后将子问题的解合并成原问题的解。具体来说，分治算法通常包括以下几个步骤： 分解：将原问题分解成若干个规模相同的子问题。 解决：递归地求解每个子问题，如果子问题足够小，则直接求解。 合并：将子问题的解合并成原问题的解。 返回：返回原问题的解。 分治算法通常具有较高的时间复杂度，但由于它能够将问题划分成规模较小的子问题并递归求解，因此能够有效地解决很多复杂的问题。 分治算法可以应用于多种场景，例如图像处理、计算机视觉、自然语言处理、机器学习等。","text":"参考文献： https://zhuanlan.zhihu.com/p/45986027 分治算法分治算法的概念分治分治，即分而治之。分治，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，再把子问题分成更小的子问题……直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。这个技巧是很多高效算法的基础，如排序算法(快速排序，归并排序)，傅立叶变换(快速傅立叶变换)……直接说就是将一个难以直接解决的大问题，分割成一些规模比较小的相同的小问题，以便各个击破，分而治之。 分治算法（Divide and Conquer，D&amp;C）是一种常用的算法思想，它通过将问题划分成若干个规模较小的子问题，递归求解子问题，然后将子问题的解合并得到原问题的解。它通常用于求解一些复杂的问题，例如归并排序、快速排序、求解最大子序列等问题。 分治算法的核心思想是将原问题划分成若干个规模相同的子问题，通过递归求解子问题，然后将子问题的解合并成原问题的解。具体来说，分治算法通常包括以下几个步骤： 分解：将原问题分解成若干个规模相同的子问题。 解决：递归地求解每个子问题，如果子问题足够小，则直接求解。 合并：将子问题的解合并成原问题的解。 返回：返回原问题的解。 分治算法通常具有较高的时间复杂度，但由于它能够将问题划分成规模较小的子问题并递归求解，因此能够有效地解决很多复杂的问题。 分治算法可以应用于多种场景，例如图像处理、计算机视觉、自然语言处理、机器学习等。 轻硬币问题问题：有100枚硬币，其中1枚重量与众不同，是假币，略轻一些。如果用天平秤，请问至少称几次一定能找到这枚假币。 如果是正常的两两比较，那么至少需要比较50次，这“至少50次”指的是在方案最优的情况下的最坏情况次数 知乎上面给的流程图是这样的，个人感觉是i+2进行循环 利用分治的方式进行解决的话就是每一次将硬币三等分，那么结果就是只需要上取整次数就可以取到，还是很香的。 引用知乎文章流程1.将100硬币分成3份，33,33,34。2.称量1、2份，若天平平衡，则假币必在另外34枚中。若不平衡，假币在轻的那33枚里。3.将34枚分为11/11/12枚（或将33枚分成11*3）。4.称量两组11枚的硬币，若平衡，假币在12枚里（或另外的11枚）若不平衡，假币在轻的11里。5.将11（或12）枚分成3/4/4（或4/4/4），称量4/4，方法同上。6.将剩下的3（或4）分为1/1/1（或1/1），称量1/1，若平衡，则剩下的一枚是假币，若不平衡，轻的是假币。 若还剩4枚，出现1/1平衡，剩下2枚则称量，显然轻的是假币。这种方法只需要5次就能解决这个问题。 五次的结果和上取整结果是相同的，这里我傻了，我在竟然在纠结😖计算器如何实现怎么求，哈人 编程实现（再不编程算法我感觉我都要废了）： 数组初始赋值： https://blog.csdn.net/weixin_39761558/article/details/113561564 memset函数赋值事项： https://www.jianshu.com/p/ed1ce7583bf7 https://www.jb51.net/article/223385.htm 其实也就是memset要么适合于字符数组的取值，要么适合于0的赋值，像int这种4个字节的，只能说将最后的字节长度设置成为sizeof(array)或者是all*size(int)这种来赋值0 12int weight[101]=&#123;0&#125;;cout&lt;&lt;sizeof(weight)&lt;&lt;endl;//404 随机数生成： https://blog.csdn.net/EmileJiao/article/details/123351432 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859// std#include&quot;iostream&quot;// srand rand#include&lt;cstdlib&gt;// time#include&lt;ctime&gt;// memset#include&lt;cstring&gt;using namespace std;int addGroup(char *array,int begin,int end)&#123; int result=0; if(begin&gt;end)&#123; result=-1; &#125; else&#123; for(int i=begin;i&lt;end+1;i++)&#123; result+=*(array+i); &#125; &#125; return result;&#125;int main()&#123; srand(time(0)); // 随机生成一个1-100的数字作为目标数字 int targetNum=rand()%100+1; // 初始化一个数组用来确定每个硬币的重量 char weight[101]; // 假设正常硬币的重量为3 memset(weight,3,sizeof(weight)); // 目标硬币的重量为2 weight[targetNum]=2; int begin=1,end=100; int n=0; while(begin!=end)&#123; n++; int groupSize=(end-begin+1)/3; if(groupSize==0)&#123; if(weight[begin]&lt;weight[end])&#123; end=begin; &#125; else&#123; begin=end; &#125; break; &#125; if(addGroup(weight,begin,begin+groupSize-1)&lt;addGroup(weight,begin+groupSize,begin+2*groupSize-1))&#123; end=begin+groupSize-1; &#125; else if(addGroup(weight,begin,begin+groupSize-1)==addGroup(weight,begin+groupSize,begin+2*groupSize-1))&#123; begin=begin+2*groupSize; &#125; else&#123; begin=begin+groupSize; end=begin+2*groupSize-1; &#125; &#125; cout&lt;&lt;&quot;硬币的位置是第&quot;&lt;&lt;begin&lt;&lt;&quot;个&quot;&lt;&lt;endl; cout&lt;&lt;&quot;循环次数&quot;&lt;&lt;n&lt;&lt;endl;&#125; 被子和杯盖问题（螺丝和螺母问题）问题：有个大小不同的杯子和与之匹配的n个杯盖, 你可以尝试一个杯子和一个杯盖是否匹配, 尝试结果有三种：（1）杯子太大；（2）匹配成功；（3）杯盖太大. 除此之外，无法直接比较杯子与杯子之间的大小关系，也无法直接比较杯盖和杯盖之间的大小关系. 请设计一个分治算法完成所有杯子和杯盖的匹配, 算法的时间复杂性用匹配尝试的次数来衡量。请写出（1）算法设计的思路，包括边界条件、Divide、Conquer和Merge的基本过程；（2）算法的伪代码；（3）算法的时间复杂度。 动态规划算法动态规划算法的概念动态规划（Dynamic Programming，DP）是一种常用的算法思想，主要用于优化问题，它通常用于求解一些最优化问题，例如最长公共子序列、背包问题、最短路问题等。 动态规划算法的核心思想是将原问题分解成若干个子问题，通过求解子问题的最优解来求解原问题的最优解。具体来说，动态规划算法通常包括以下几个步骤 定义状态：找到问题的状态，并设计状态表示方式。 确定状态转移方程：找到问题的状态之间的转移关系，并设计状态转移方程。 初始状态：确定初始状态。 计算最优解：利用状态转移方程递推计算最优解。 返回最优解。 动态规划算法通常具有较高的时间复杂度，但由于它具有较好的子问题重叠性和最优子结构性质，因此能够有效地解决很多复杂的问题。 动态规划算法可以应用于多种场景，例如文本分析、图像处理、计算机视觉、自然语言处理等","categories":[],"tags":[]},{"title":"web学习记录","slug":"web","date":"2023-03-17T04:11:20.000Z","updated":"2023-03-23T23:46:27.445Z","comments":true,"path":"2023/03/17/web/","link":"","permalink":"http://example.com/2023/03/17/web/","excerpt":"授课老师：辛国栋 课程：web网络开发 学校：哈工大（威海） 仅可用于个人学习 超文本传输协议HTTP参考文献： https://www.cnblogs.com/YouJeffrey/p/15334068.html https://www.cnblogs.com/an-wen/p/11180076.html 超文本传输协议，浏览器和服务器之间传输用到的协议 HTTP协议（超文本传输协议（英文：HyperText Transfer Protocol，缩写：HTTP））是一种网络通信协议，它允许将超文本标记语言(HTML)文档从Web服务器传送到客户端的浏览器。默认端口：80，http协议是基于TCP&#x2F;IP协议****之上的应用层协议。 网络协议","text":"授课老师：辛国栋 课程：web网络开发 学校：哈工大（威海） 仅可用于个人学习 超文本传输协议HTTP参考文献： https://www.cnblogs.com/YouJeffrey/p/15334068.html https://www.cnblogs.com/an-wen/p/11180076.html 超文本传输协议，浏览器和服务器之间传输用到的协议 HTTP协议（超文本传输协议（英文：HyperText Transfer Protocol，缩写：HTTP））是一种网络通信协议，它允许将超文本标记语言(HTML)文档从Web服务器传送到客户端的浏览器。默认端口：80，http协议是基于TCP&#x2F;IP协议****之上的应用层协议。 网络协议网络协议是指计算机通信网络中两台计算机之间进行通信所必须共同遵守的规定或规则。 HTTP协议特点 基于TCP协议，面向连接，安全 基于请求相应模型，一次请求一次相应 无状态，对于事务处理没有记忆能力。每次请求-响应之间相互独立。 优点：速度快 缺点：多次请求间不能共享数据。Java中使用会话技术解决这个问题 1、支持客户&#x2F;服务器模式。 2、简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。请求-响应模式。 3、灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。 4、无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。 5、无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。多次请求无法共享数据（Java会用会话技术来解决无状态） HTTPS协议HTTPS协议是一种通过计算机网络进行安全通信的传输协议，经由HTTP进行通信，利用SSL&#x2F;TLS建立全信道，加密数据包。HTTPS使用的主要目的是提供对网站服务器的身份认证，同时保护交换数据的隐私与完整性。默认端口：443 HTTP协议格式请求行 请求头 请求空行 请求体（正文） 请求行格式： POST &#x2F;login.html HTTP&#x2F;1.1 请求方式 POST 请求url &#x2F;login.html 请求协议版本 HTTP&#x2F;1.1 请求方式：HTTP协议有7种请求方式，常用的有2种 GET POST 请求url：表示请求资源的路径 请求协议&#x2F;版本：表示协议版本 请求头请求头：请求头中包含若干属性，从第二行开始，格式为 Key :Value 形式。 请求头主要用于向服务器传递附加消息 12345Host: 表示请求的主机名User-Agent: 浏览器版本，例如Chrome浏览器的标识类似Mozilla/5.0 ... Chrome /79，IE浏览器的标识类似Mozilla/5.0 (Windows NT ...)like Gecko；Accept：表示浏览器能接收的资源类型，如text/*，image/*或者*/*表示所有；Accept-Language：表示浏览器偏好的语言，服务器可以据此返回不同语言的网页；Accept-Encoding：表示浏览器可以支持的压缩类型，例如gzip, deflate等。 tomcat学习参考文献 https://blog.csdn.net/love_Aym/article/details/80613183 JDK相关知识JDK：JDK是 Java 语言的软件开发工具包，主要用于移动设备、嵌入式设备上的java应用程序。JDK是整个java开发的核心，它包含了JAVA的运行环境（JVM+Java系统类库）和JAVA工具。 即JDK&#x3D;运行环境+JAVA工具 查看JDK版本 这就是JDK版本 bin：可以执行文件。conf：tomcat服务器的配置文件lib：tomcat启动后需要依赖的jar包logs：tomcat工作之后的日志文件webapps：是tomcat布暑工程的目录。 work：jsp文件在被翻译之后，保存在当前这个目录下，session对象被序列化之后保存的位置 端口tomcat默认的端口是8080（访问端口） http的默认端口是80，如果访问的时候输入http://www.baidu.com相当于http://www.baidu.com:80。当真正在项目上线之后，通常采用80，修改方法如下： 修改为HTTP访问： **1）找到tomcat目录&#x2F;conf&#x2F;server.xml**2）修改port的值，将port端口的值修改为80 3）然后在浏览器中输入 http://127.0.0.1:80 或 http://127.0.0.1 访问测试 访问成功！！！ 编码ASSCII ISO-8859-1 Big5（繁体） GB2312（2byte 简体） GBK（繁体+简体） GB18030（4byte） unicode（4byte） UTF-8是unicode的实现方式，可变长的编码方式 解码 tomcat启动一般目录点击启动tomcat目录&#x2F;bin&#x2F;startup.bat(window启动文件) 找到startup.bat 双击运行 命令行启动1catlina run romcat关闭有三种方法。 第一种：Ctrl+C键 关闭Tomcat服务器第二种：点击Tomcat窗口的右上角关闭按钮 （暴力停止服务器）第三种：找到tomcat目录**&#x2F;bin&#x2F;shutdown.bat**文件，双击执行关闭Tomcat。 工程部署把我们自己书写的html，servlet这些信息，部署到tomcat的方式。 创建新的module XML基础概念可扩展（标签都是自定义，不同于HTML）标记语言 类似于HTML W3C（万维网联盟） 12345678910111213&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;students&gt; &lt;student number=&quot;s001&quot;&gt; &lt;name&gt;zhangsan&lt;/name&gt; &lt;age&gt;abc&lt;/age&gt; &lt;gender&gt;hehe&lt;/gender&gt; &lt;/student&gt; &lt;student number=&quot;s002&quot;&gt; &lt;name&gt;lisi&lt;/name&gt; &lt;age&gt;24&lt;/age&gt; &lt;gender&gt;female&lt;/gender&gt; &lt;/student&gt; &lt;/students&gt; xml是html的约束 XML作用123456name = zhangsan age = 23 gender = male name = lisi age = 24gender = female XML和HTML对比 6.单引号双引号都可以 语法文档声明 ISO88591认不出中文 标签&#x2F;元素 属性 注释 约束类型有两种约束方式：DTD 和 Schema XML 文件是可扩展的，其标签可以自定义的，只要符合 XML 的要求，就可以写一个XML文件，无论对错 如果对于其中变量的范围进行限制，就是约束 标签数 内容数据大小 为此，需要定义了一套规则来对文档中的内容作出限制约束，这套约束称为 XML 约束。 DTD文档类型定义 实例 DTD引入方式 语法总结 Schema用的多+难 实例 元标签 根元素 xs&#x3D;”http://www.w3.org/2001/XMLSchema&quot;！！！！ 便于下面的标签书写 xmlns namespace 命名空间 最终的 ————————————–3.20——————————————- requestmaven 生命周期 安装配置 reader writer inputstream outputstream 基本功能增强功能 装饰者模式 考试不给： HTTP请求数据总共分为四部分内容，分别是请求行、请求头、请求空行和请求体。 避免为空报错 考试必考","categories":[],"tags":[]},{"title":"git学习记录","slug":"git学习记录","date":"2023-03-13T15:04:45.000Z","updated":"2023-03-13T08:11:11.004Z","comments":true,"path":"2023/03/13/git学习记录/","link":"","permalink":"http://example.com/2023/03/13/git%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/","excerpt":"之前写过很多git的文章，比较乱，下面是一些常用的内容","text":"之前写过很多git的文章，比较乱，下面是一些常用的内容 git使用下拉分支1git clone -b anti_gyro https://** -b代表分支（branch） anti_gyro是希望下拉的分支 后面的部分是对应的网址 出现错误，就是没有加分支 加上就OK 工程密钥https://gitee.com/help/articles/4181#article-header0 查看自己的账号信息即设置方式1git config --list 如果没有账号邮箱，可以按照下面的命令设置，注意用自己的 12git config --global user.name &quot;JSHERO&quot;git config --global user.email &quot;11717182+jsherodj@user.noreply.gitee.com&quot; 工程上传下拉1234git add . //将工程添加到缓存git commit -m &quot;说明的文字&quot; //说明文字是对更新的说明git push //上传git pull //下拉 成功传上了，但好像有个warning，瞅瞅 vscode使用git","categories":[],"tags":[]}],"categories":[],"tags":[]}