<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vscode学习</title>
      <link href="/2023/03/19/vscode%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/03/19/vscode%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h1><p>参考文献：</p><p><a href="https://www.cnblogs.com/englyf/p/16685082.html">https://www.cnblogs.com/englyf/p/16685082.html</a></p><p>这里我的vscode是英文，windows系统中我没改</p><p>这里很有意思，vscode是自己创建个文件夹然后打开这个文件夹</p><img src="/2023/03/19/vscode%E5%AD%A6%E4%B9%A0/1679196530859-25605dbc-b9d4-41c9-b1f7-49a0600aec62.png" class="" title="img"><p>自己创建个cpp文件就行了，左边栏里面有文件+号的标志</p><img src="/2023/03/19/vscode%E5%AD%A6%E4%B9%A0/1679196759569-22cefc6a-442b-40c4-b51a-e5986f5e7ab5.png" class="" title="img">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>语雀学习</title>
      <link href="/2023/03/19/%E8%AF%AD%E9%9B%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/03/19/%E8%AF%AD%E9%9B%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>平时一直用语雀进行文章编写，感觉很好，这里记录一下语雀中发现的好的内容</p><h1 id="文档编辑"><a href="#文档编辑" class="headerlink" title="文档编辑"></a>文档编辑</h1><p><a href="https://www.yuque.com/yuque/gpvawt">https://www.yuque.com/yuque/gpvawt</a></p><h2 id="公式的插入"><a href="#公式的插入" class="headerlink" title="公式的插入"></a>公式的插入</h2><p><a href="https://www.yuque.com/yuque/gpvawt/brzicb">https://www.yuque.com/yuque/gpvawt/brzicb</a></p><p>log：这里的话顺便说一下语雀中只要是按住ctrl打出&#x2F;，注意这里不分中英文情况下，就可以引出你要添加的内容，里面会出现公式，当然懒得找直接&#x2F;gs，gs很简单就是公式的首拼音</p><img src="/2023/03/19/%E8%AF%AD%E9%9B%80%E4%BD%BF%E7%94%A8/1679195011915-20a3ba96-ac76-44dd-8c84-d46c2f163d3d-16791989143141.png" class="" title="img"><p>log的话是_取下标，这样<img src="/2023/03/19/%E8%AF%AD%E9%9B%80%E4%BD%BF%E7%94%A8/e09b2e24d9235f875017e7e58780be8f-16791989143153.svg" class="" title="img">就OK了</p><img src="/2023/03/19/%E8%AF%AD%E9%9B%80%E4%BD%BF%E7%94%A8/1679195067788-5667455c-f951-4b8e-acb1-5fd61c4cd972-16791989143155.png" class="" title="img"><p>但这里有个问题。。。。log以23为底咋办，纯寄，不会，等再说吧，暂时没有需要</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>算法学习</title>
      <link href="/2023/03/19/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/03/19/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>参考文献：</p><p><a href="https://zhuanlan.zhihu.com/p/45986027">https://zhuanlan.zhihu.com/p/45986027</a></p><h1 id="分治算法"><a href="#分治算法" class="headerlink" title="分治算法"></a>分治算法</h1><h2 id="分治算法的概念"><a href="#分治算法的概念" class="headerlink" title="分治算法的概念"></a>分治算法的概念</h2><p>分治分治，即分而治之。分治，就是把一个<strong>复杂的问题分成两个或更多的相同或相似的子问题</strong>，再把子问题分成更小的子问题……直到<strong>最后子问题可以简单的直接求解</strong>，原问题的解即子问题的解的合并。这个技巧是很多高效算法的基础，如<strong>排序算法(快速排序，归并排序)，傅立叶变换(快速傅立叶变换)<strong>……<br>直接说就是将一个难以直接解决的大问题，</strong>分割成一些规模比较小的相同的小问题</strong>，以便各个击破，分而治之。</p><p>分治算法（Divide and Conquer，D&amp;C）是一种常用的算法思想，它通过将<strong>问题划分成若干个规模较小的子问题</strong>，<strong>递归求解子问题</strong>，然后将<strong>子问题的解合并得到原问题的解</strong>。它通常用于求解一些复杂的问题，例如归并排序、快速排序、求解最大子序列等问题。</p><p>分治算法的核心思想是将原问题划分成若干个规模相同的子问题，通过递归求解子问题，然后将子问题的解合并成原问题的解。具体来说，分治算法通常包括以下几个步骤：</p><ol><li>分解：将原问题分解成若干个规模相同的子问题。</li><li>解决：递归地求解每个子问题，如果子问题足够小，则直接求解。</li><li>合并：将子问题的解合并成原问题的解。</li><li>返回：返回原问题的解。</li></ol><p>分治算法通常具有较高的时间复杂度，但由于它能够将问题划分成规模较小的子问题并递归求解，因此能够有效地解决很多复杂的问题。</p><p>分治算法可以应用于多种场景，例如图像处理、计算机视觉、自然语言处理、机器学习等。</p><h2 id="轻硬币问题"><a href="#轻硬币问题" class="headerlink" title="轻硬币问题"></a>轻硬币问题</h2><p>问题：有100枚硬币，其中1枚重量与众不同，是假币，略轻一些。如果用天平秤，请问至少称几次一定能找到这枚假币。</p><p>如果是正常的两两比较，那么至少需要比较50次，这“至少50次”指的是在方案最优的情况下的最坏情况次数</p><p>知乎上面给的流程图是这样的，个人感觉是i+2进行循环</p><img src="/2023/03/19/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/1679194142199-5e324da7-e4f6-4994-9bc2-5eb4e7b192b3.jpeg" class="" title="img"><p>利用分治的方式进行解决的话就是每一次将硬币三等分，那么结果就是只需要<img src="/2023/03/19/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/e09b2e24d9235f875017e7e58780be8f.svg" class="" title="img">上取整次数就可以取到，还是很香的。</p><details class="lake-collapse"><summary id="u34143fd5"><span class="ne-text">引用知乎文章流程</span></summary><p id="uff575b88" class="ne-p" style="margin: 0; padding: 0; min-height: 24px"><span class="ne-text" style="color: rgb(18, 18, 18)">1.将100硬币分成3份，33,33,34。</span></p><p id="u8ed54400" class="ne-p" style="margin: 0; padding: 0; min-height: 24px"><span class="ne-text" style="color: rgb(18, 18, 18)">2.称量1、2份，若天平平衡，则假币必在另外34枚中。若不平衡，假币在轻的那33枚里。</span></p><p id="ud0e0c555" class="ne-p" style="margin: 0; padding: 0; min-height: 24px"><span class="ne-text" style="color: rgb(18, 18, 18)">3.将34枚分为11/11/12枚（或将33枚分成11*3）。</span></p><p id="u61a94411" class="ne-p" style="margin: 0; padding: 0; min-height: 24px"><span class="ne-text" style="color: rgb(18, 18, 18)">4.称量两组11枚的硬币，若平衡，假币在12枚里（或另外的11枚）若不平衡，假币在轻的11里。</span></p><p id="u7b6cfc51" class="ne-p" style="margin: 0; padding: 0; min-height: 24px"><span class="ne-text" style="color: rgb(18, 18, 18)">5.将11（或12）枚分成3/4/4（或4/4/4），称量4/4，方法同上。</span></p><p id="ufb28b0fe" class="ne-p" style="margin: 0; padding: 0; min-height: 24px"><span class="ne-text" style="color: rgb(18, 18, 18)">6.将剩下的3（或4）分为1/1/1（或1/1），称量1/1，若平衡，则剩下的一枚是假币，若不平衡，轻的是假币。 若还剩4枚，出现1/1平衡，剩下2枚则称量，显然轻的是假币。</span></p><p id="ud268fb00" class="ne-p" style="margin: 0; padding: 0; min-height: 24px"><span class="ne-text" style="color: rgb(18, 18, 18)">这种方法只需要5次就能解决这个问题。</span></p></details><img src="/2023/03/19/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/1679195871811-3d21f753-97d7-4a3d-a600-522208793c12.png" class="" title="img"><p>五次的结果和<img src="/2023/03/19/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/67273a77503c4d77ef9d2833b1290014.svg" class="" title="img">上取整结果是相同的，这里我傻了，我在竟然在纠结😖计算器如何实现<img src="/2023/03/19/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/45c3ed0d448a967de2be87df9d46a967.svg" class="" title="img">怎么求，哈人</p><p>编程实现（再不编程算法我感觉我都要废了）：</p><p>数组初始赋值：</p><p><a href="https://blog.csdn.net/weixin_39761558/article/details/113561564">https://blog.csdn.net/weixin_39761558/article/details/113561564</a></p><p>memset函数赋值事项：</p><p><a href="https://www.jianshu.com/p/ed1ce7583bf7">https://www.jianshu.com/p/ed1ce7583bf7</a></p><p><a href="https://www.jb51.net/article/223385.htm">https://www.jb51.net/article/223385.htm</a></p><p>其实也就是memset要么适合于字符数组的取值，要么适合于0的赋值，像int这种4个字节的，只能说将最后的字节长度设置成为sizeof(array)或者是all*size(int)这种来赋值0</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int weight[101]=&#123;0&#125;;</span><br><span class="line">cout&lt;&lt;sizeof(weight)&lt;&lt;endl;//404</span><br></pre></td></tr></table></figure><p>随机数生成：</p><p><a href="https://blog.csdn.net/EmileJiao/article/details/123351432">https://blog.csdn.net/EmileJiao/article/details/123351432</a></p><h1 id="动态规划算法"><a href="#动态规划算法" class="headerlink" title="动态规划算法"></a>动态规划算法</h1><h2 id="动态规划算法的概念"><a href="#动态规划算法的概念" class="headerlink" title="动态规划算法的概念"></a>动态规划算法的概念</h2><p>动态规划（Dynamic Programming，DP）是一种常用的算法思想，主要用于优化问题，它通常用于<strong>求解一些最优化问题</strong>，例如<strong>最长公共子序列</strong>、<strong>背包问题</strong>、<strong>最短路问题</strong>等。</p><p>动态规划算法的核心思想是将原问题分解成若干个子问题，<strong>通过求解子问题的最优解来求解原问题的最优解</strong>。具体来说，动态规划算法通常包括以下几个步骤</p><ol><li><strong>定义状态</strong>：找到问题的状态，并设计状态表示方式。</li><li><strong>确定状态转移方程</strong>：找到问题的状态之间的转移关系，并设计状态转移方程。</li><li><strong>初始状态</strong>：确定初始状态。</li><li><strong>计算最优解</strong>：利用状态转移方程递推计算最优解。</li><li><strong>返回最优解</strong>。</li></ol><p>动态规划算法通常具有较高的时间复杂度，但由于它具有<strong>较好的子问题重叠性和最优子结构性质</strong>，因此能够有效地解决很多复杂的问题。</p><p>动态规划算法可以应用于多种场景，例如<strong>文本分析、图像处理、计算机视觉、自然语言处理</strong>等</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>web学习记录</title>
      <link href="/2023/03/17/web/"/>
      <url>/2023/03/17/web/</url>
      
        <content type="html"><![CDATA[<p>授课老师：辛国栋     课程：web网络开发    学校：哈工大（威海） 仅可用于个人学习</p><h1 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h1><h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><p>可扩展（<strong>标签都是自定义，不同于HTML</strong>）标记语言 类似于HTML W3C（万维网联盟）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">students</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">student</span> <span class="attr">number</span>=<span class="string">&quot;s001&quot;</span>&gt;</span>       </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">name</span>&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;<span class="name">age</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">age</span>&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;<span class="name">gender</span>&gt;</span>hehe<span class="tag">&lt;/<span class="name">gender</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;/<span class="name">student</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">student</span> <span class="attr">number</span>=<span class="string">&quot;s002&quot;</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>lisi<span class="tag">&lt;/<span class="name">name</span>&gt;</span>       </span><br><span class="line">    <span class="tag">&lt;<span class="name">age</span>&gt;</span>24<span class="tag">&lt;/<span class="name">age</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">gender</span>&gt;</span>female<span class="tag">&lt;/<span class="name">gender</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">students</span>&gt;</span></span><br></pre></td></tr></table></figure><p>xml是html的约束</p><h3 id="XML作用"><a href="#XML作用" class="headerlink" title="XML作用"></a>XML作用</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = zhangsan</span><br><span class="line">age = 23</span><br><span class="line">gender = male</span><br><span class="line">name = lisi</span><br><span class="line">age = 24</span><br><span class="line">gender = female</span><br></pre></td></tr></table></figure><img src="/2023/03/17/web/1679020526423-76ca9860-282b-46b6-bdb9-7a69ae037db3-16789965187811.png" class="" title="img"><h3 id="XML和HTML对比"><a href="#XML和HTML对比" class="headerlink" title="XML和HTML对比"></a>XML和HTML对比</h3><img src="/2023/03/17/web/1679020782346-6b08a5bf-3167-4ff6-ba16-ae3bf0eea852-16789965187823.png" class="" title="img"><p>6.单引号双引号都可以</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="文档声明"><a href="#文档声明" class="headerlink" title="文档声明"></a>文档声明</h3><img src="/2023/03/17/web/1679020960684-4d2004bb-3db8-4594-804c-32df639c842b-16789965187825.png" class="" title="img"><p>ISO88591认不出中文</p><h3 id="标签-x2F-元素"><a href="#标签-x2F-元素" class="headerlink" title="标签&#x2F;元素"></a>标签&#x2F;元素</h3><img src="/2023/03/17/web/1679021110122-961b1d7c-ef91-45dc-8540-12d81f48f69d-16789965187827.png" class="" title="img"><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><img src="/2023/03/17/web/1679021195113-133cec4f-a59c-42f9-88a8-0c02d8840470-16789965187829.png" class="" title="img"><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><img src="/2023/03/17/web/1679021236442-64e7e892-f851-46c6-a080-4374fbe0e1a8-167899651878211.png" class="" title="img"><h2 id="约束类型"><a href="#约束类型" class="headerlink" title="约束类型"></a>约束类型</h2><p>有两种约束方式：<strong>DTD 和 Schema</strong> </p><p>XML 文件是可扩展的，其标签可以自定义的，<strong>只要符合 XML 的要求，就可以写一个XML文件，无论对错</strong></p><p>如果对于其中<strong>变量的范围进行限制</strong>，就是<strong>约束</strong></p><p>标签数 内容数据大小</p><p>为此，需要定义了一套规则来对文档中的内容作出限制约束，这套约束称为 XML 约束。</p><h3 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h3><p>文档类型定义</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><img src="/2023/03/17/web/1679022090994-49957403-ffc1-4284-9bd0-6081a072218a.png" class="" title="img"><img src="/2023/03/17/web/1679022225213-8a255a65-4ad9-40c1-a9d4-2ad1f5ee934f.png" class="" title="img"><h4 id="DTD引入方式"><a href="#DTD引入方式" class="headerlink" title="DTD引入方式"></a>DTD引入方式</h4><img src="/2023/03/17/web/1679022184672-0102c768-8c33-4121-9043-f0716a68b718.png" class="" title="img"><h4 id="语法总结"><a href="#语法总结" class="headerlink" title="语法总结"></a>语法总结</h4><img src="/2023/03/17/web/1679022606678-06e6b0d0-f8a9-45c0-9ee5-a0363dff3b12.png" class="" title="img"><h3 id="Schema"><a href="#Schema" class="headerlink" title="Schema"></a>Schema</h3><p>用的多+难</p><img src="/2023/03/17/web/1679022791978-3c61e97c-afdb-4ad7-9d7c-d82c303a5752.png" class="" title="img"><h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><img src="/2023/03/17/web/1679023122267-c9bbcea7-545c-47e7-8e25-7deec9a43ebd.png" class="" title="img"><h4 id="元标签"><a href="#元标签" class="headerlink" title="元标签"></a>元标签</h4><img src="/2023/03/17/web/1679023273947-27edc3d0-e82a-47c0-b437-65581faed0f6.png" class="" title="img"><h4 id="根元素"><a href="#根元素" class="headerlink" title="根元素"></a>根元素</h4><img src="/2023/03/17/web/1679023435586-6d5048c1-3484-497a-9f82-c8547438c602.png" class="" title="img"><p>xs&#x3D;”<a href="http://www.w3.org/2001/XMLSchema%22%EF%BC%81%EF%BC%81%EF%BC%81%EF%BC%81">http://www.w3.org/2001/XMLSchema&quot;！！！！</a></p><p>便于下面的标签书写</p><p>xmlns namespace 命名空间</p><img src="/2023/03/17/web/1679023881601-491822cc-8434-465c-bc81-f8f275d0adcb.png" class="" title="img"><img src="/2023/03/17/web/1679024134265-64ad6f82-455b-4b1d-8ca2-8e8ff3ad540f.png" class="" title="img"><img src="/2023/03/17/web/1679024199537-4c37e2df-1b5f-455d-8a52-dc7938a2716a.png" class="" title="img"><img src="/2023/03/17/web/1679024263872-c73bad0c-b66c-4793-864a-e1e0c3d67360.png" class="" title="img"><h4 id="最终的"><a href="#最终的" class="headerlink" title="最终的"></a>最终的</h4><img src="/2023/03/17/web/1679025230161-5cb57b75-0356-4b80-b9a0-3a0b39a475b5.png" class="" title="img">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git学习记录</title>
      <link href="/2023/03/13/git%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/03/13/git%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>之前写过很多git的文章，比较乱，下面是一些常用的内容</p><span id="more"></span><h1 id="git使用"><a href="#git使用" class="headerlink" title="git使用"></a>git使用</h1><h2 id="下拉分支"><a href="#下拉分支" class="headerlink" title="下拉分支"></a>下拉分支</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b anti_gyro https://**</span><br></pre></td></tr></table></figure><p>-b代表分支（branch） anti_gyro是希望下拉的分支 后面的部分是对应的网址</p><img src="/2023/03/13/git%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/1678717198492-9f8957a0-3c4d-4b86-a8d1-37ca9180a52b.png" class="" title="img"><img src="/2023/03/13/git%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/1678717396649-22138e26-e6af-4d6f-acf5-d8f291f874fb.png" class="" title="img"><p>出现错误，就是没有加分支</p><img src="/2023/03/13/git%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/1678717473332-174b138e-d4be-4478-8426-cb8f0128ac0f.png" class="" title="img"><p>加上就OK</p><img src="/2023/03/13/git%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/1678718202539-b245d645-acca-4ea7-9e1f-af9214ef54d6.png" class="" title="img"><h2 id="工程密钥"><a href="#工程密钥" class="headerlink" title="工程密钥"></a>工程密钥</h2><p><a href="https://gitee.com/help/articles/4181#article-header0">https://gitee.com/help/articles/4181#article-header0</a></p><h2 id="查看自己的账号信息即设置方式"><a href="#查看自己的账号信息即设置方式" class="headerlink" title="查看自己的账号信息即设置方式"></a>查看自己的账号信息即设置方式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><img src="/2023/03/13/git%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/1678717647050-2610b837-5d5e-489f-9c33-54a66c729d77.png" class="" title="img"><p>如果没有账号邮箱，可以按照下面的命令设置，注意用自己的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;JSHERO&quot;</span><br><span class="line">git config --global user.email &quot;11717182+jsherodj@user.noreply.gitee.com&quot;</span><br></pre></td></tr></table></figure><h2 id="工程上传下拉"><a href="#工程上传下拉" class="headerlink" title="工程上传下拉"></a>工程上传下拉</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add .//将工程添加到缓存</span><br><span class="line">git commit -m &quot;说明的文字&quot;//说明文字是对更新的说明</span><br><span class="line">git push//上传</span><br><span class="line">git pull//下拉</span><br></pre></td></tr></table></figure><img src="/2023/03/13/git%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/1678718708490-32d9dd0d-b44e-476a-9476-99ee8f40ce34.png" class="" title="img"><p>成功传上了，但好像有个warning，瞅瞅</p><h2 id="vscode使用git"><a href="#vscode使用git" class="headerlink" title="vscode使用git"></a>vscode使用git</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
